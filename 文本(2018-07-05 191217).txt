/*********************************************************
Copyright (C), 2018-2019. 
File name: 工资管理系统
Author: Version: Date:殷伟伟 0.1 2018/6/20 // 作者、版本及完成日期
Function List: read()
（1）函数描述。主函数执行时要调用和必须调用的第一个函数。
（2）函数功能。从数据文件中读取职工工资数据、初始化职工工资结构体数组并统计当前数据文件中职工人数，并将职工人数存在全局变量n中，以备其他函数使用。
write()
（1）函数描述。在执行保存功能时被主函数调用。
（2）函数功能。将zggz结构体数组中的记录保存到gz.dat数据文件中。
find()
（1）函数描述。在执行查询功能时被主函数调用。
（2）函数功能。根据工号查询相应职工的工资记录。
list()
（1）函数描述。在执行浏览功能时被主函数调用。
（2）函数功能。显示所用职工的记录。
modify()
（1）函数描述。在执行修改功能时被主函数调用
（2）函数功能。指定工号，修改该职工的工资记录，其中要调用grsds()函数计算个人所得税。
del()
（1）函数描述。在执行删除功能时被主函数调用
（2）函数功能。删除指定工号职工的记录
add()
（1）函数描述。在执行添加功能时被主函数调用
（2）函数功能。添加工资记录到结构体数组zggz末尾
grsds()
（1）函数描述。在计算个人所得税时被调用
（2）函数功能。计算个人所得税，按照个人所得税税率表来计算
main()
（1）函数描述。主函数是程序执行的开始，在主函数中可调用其他函数来实现用户要求的功能。
（2）函数功能。主函数实现了系统的主界面，用户可在此界面输入查询、浏览、删除等命令。
  // 主要函数列表，每条记录应包括函数名及功能简要说明
*********************************************************/
#include <stdlib.h>

#include <stdio.h>
#include <string.h>
#define NUM 50
struct gongzi
{
    char ID[10];         //工号
 	char name[10];   //姓名
 	float postWages;        //岗位工资
 	float paySalary;       //薪级工资
 	float jobAllowance;          // 职务津贴 
    float performancePay;         //绩效工资
 	float shouldPay;         //应发工资
 	float tax;       //个人所得税
	float realWages;      //实发工资
	float s1;
}zggz[NUM];      
void menu();
int read();
void write(int);
void find();
void list();
void modify(); 
void del();
void add();
void grads();
void enter();
void load();
void grads(int);
void menu() //菜单界面
{  
   { system("cls");  
     printf("***欢迎使用广西民族大学软件与信息安全学院职工工资管理系统***\n\n");
	 printf("请选择<1-7>:\n");
	 printf("================================================================= \n"); 
     printf("|          1.查询职工工资记录                                    |\n");
     printf("|          2.修改职工工资记录                                    |\n");
     printf("|          3.添加职工工资记录                                    |\n");
     printf("|          4.删除职工工资记录                                    |\n");
     printf("|          5.保存数据到文件                                      |\n");
     printf("|          6.浏览职工记录                                        |\n");
     printf("|          7.退出系统                                            |\n");
	 printf("================================================================= \n"); 
    
   }
}
/*********************************************************
Function:read //函数名称
Description：函数描述。主函数执行时要调用和必须调用的第一个函数。 函数功能。从数据文件中读取职工工资数据、初始化职工工资结构体数组并统计当前数据文件中职工人数，并将职工人数存在全局变量n中，以备其他函数使用。
Calls:gz.dat
Called by；gzzg[n]
*********************************************************/

int read()//读取函数
{
    FILE*fp;
 	int i=0;
   	if((fp=fopen("gz.dat","rb"))==NULL)
 	{
  	printf ("打开失败\n");
     	exit(0);
 	}
 	else 
 	{
  	do 
  	{
        	fread(&zggz[i],sizeof(struct gongzi),1,fp); //读取
    	 	i++;
  	}
  	while(feof(fp)==0);  //检测流上的文件结束符
 	}
 
fclose(fp);
 	return(i-1);//返回人数
}

/*********************************************************
Function:write 
Description:  函数描述。在执行保存功能时被主函数调用。 函数功能。将zggz结构体数组中的记录保存到gz.dat数据文件中。
Calls: gz.dat
*********************************************************/
void write(int m)  /*保存文件函数*/
{
 	int i;
 	FILE*fp;   //声明fp是指针，用来指向FILE类型的对象
 	if ((fp=fopen("gz.dat","wb"))==NULL) //打开职工列表文件为空
 	{
  	printf ("打开失败\n");
     	exit(0);
 	}
 
for(i=0;i<m;i++) /*将内存中职工的信息输出到磁盘文件中去*/
{
   	if (fwrite(&zggz[i],sizeof(struct gongzi),1,fp)!=1)//写入数据块  
	{
   	printf("文件读写错误\n");
	}
}
   	fclose(fp);// 缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区
} 



/*********************************************************
Function:modify
Description: 函数描述。在执行修改功能时被主函数调用  函数功能。指定工号，修改该职工的工资记录，其中要调用grsds()函数计算个人所得税。
Calls: gz.dat
*********************************************************/
void modify() /*修改函数*/ 
{
	 system("cls"); 
	 char ID[11];         //工号
 	 char name[11];   //姓名
 	 float new_postWages;        //岗位工资
 	 float new_paySalary;       //薪级工资
 	 float new_jobAllowance;          // 职务津贴 
     float new_performancePay;         //绩效工资
	 int b,c,i,n,t,k=0;
	 int m=read();
	 char gonghao[11];
	 printf("当前职工信息：\n");
	 list();
	 printf("请输入要修改的职工工号：\n");
	 scanf("%s",gonghao);
	 for(i=0;i<m;i++)
	 {
		 if(strcmp(zggz[i].ID,gonghao)==0)
		{
			printf("-----------------------------------------------------------------------------------\n");
			printf("要修改的职工信息：\n");
			printf("工号 姓名 岗位工资 薪级工资 职务津贴 绩效工资 应发工资 个人所得税 实发工资\n");
		    printf("%s",zggz[i].ID); 
			printf("    ");
		    printf("%s",zggz[i].name); 
			printf("     ");
		    printf("%g",zggz[i].postWages);  
			printf("     ");
		    printf("%g",zggz[i].paySalary); 
			printf("     ");
		    printf("%g",zggz[i].jobAllowance); 
			printf("     ");
		    printf("%g",zggz[i].performancePay); 
			printf("     ");
			printf("%g",zggz[i].shouldPay);
		    printf("     ");
		    printf("%g",zggz[i].tax);
		    printf("     ");
		    printf("%g",zggz[i].realWages);
		    printf("     ");
			grads(i);
			printf("\n");
			k=i;
			printf("-----------------------------------------------------------------------------------\n");
	 	    printf("确认要修改这名职工请按1，放弃修改请按0\n");
		scanf("%d",&n);
		if(n==1)
		{
			printf("请输入要修改的选项：1.工号 2.姓名 3.岗位工资  4.薪级工资 5.职务津贴  6.绩效工资 \n");
			scanf("%d",&c);
			if(c>6||c<1)
			{
				printf("选择错误请重新输入\n");
			}	
		}
		//flag=0;
		}
	 }
      if(k==m)
	 {
		 printf("查无此人\n\n");
	 }
		 do
		 {
			switch(c)                   //当找到第i个职工时,for语句后i自加了1,所以下面的应该把改后的信息赋值给第i-1个人
			 {
			    case 1:
					   printf("工号改为：");
					   scanf("%s",&ID);
					   strcpy(zggz[k].ID,ID);
					   break;
				case 2:
					   printf("姓名改为：");
					   scanf("%s",&name);
					   strcpy(zggz[k].name,name);
					   break;
				case 3:
					   printf("岗位工资改为：");
					   scanf("%f",&new_postWages);
					   zggz[k].postWages=new_postWages;
					   break;
			    case 4:
					   printf("薪级工资改为：");
					   scanf("%f",&new_paySalary);
					   zggz[k].paySalary=new_paySalary;
					   break;
				case 5:
					   printf("职务津贴改为：");
					   scanf("%f",&new_jobAllowance);
					   zggz[k].jobAllowance=new_jobAllowance;
					   break;
				case 6:
					   printf("绩效工资改为：");
					   scanf("%f",&new_performancePay);
					   zggz[k].performancePay=new_performancePay;
					   break;
			 }
			 printf("\n");
			 printf("确认请按1，重新修改请按2\n");
			 scanf("%d",&b);
		 }
		 while(b==2);
		 {
			 printf("修改后的所有职工信息为：\n");
			 write(m);
			 list();
		 }
		 printf("继续修改请按1,返回请按2");
		 scanf("%d",&t);
		 switch(t)
			{
			     case 1:modify(); 
					    break;
			     default:break;
			 }
		 system("cls");
}
/*********************************************************
Function:find
Description: 函数描述。在执行浏览功能时被主函数调用率。 函数功能。显示所用职工的记录。
Calls: gz.dat
*********************************************************/
void find()//查询函数
{
	system("cls");
     int n,t;
	 int m=read();
	 char gonghao[11];
     printf("要查询的职工号:\n");
     scanf("%s",gonghao);
     for(n=0;n<m;n++)
	 {
         if(strcmp(zggz[n].ID,gonghao)==0)
		{
        printf("工号 姓名 岗位工资 薪级工资 职务津贴 绩效工资 应发工资 个人所得税 实发工资\n");
        printf("%s",zggz[n].ID);
		printf("    ");
		printf("%s",zggz[n].name);
		printf("     ");
		printf("%5.2f",zggz[n].postWages);
		printf("     ");
		printf("%5.2f",zggz[n].paySalary);
		printf("     ");
		printf("%5.2f",zggz[n].jobAllowance);
		printf("     ");
		printf("%5.2f",zggz[n].performancePay);
		printf("     ");
		grads(n);              //计算输出应发工资，税率及实付工资
		printf("%5.2f",zggz[n].shouldPay);
		printf("     ");
		printf("%5.2f",zggz[n].tax);
		printf("     ");
		printf("%5.2f",zggz[n].realWages);
		printf("     ");
		printf("\n");
		break;
		}
	 }
	  if(n==m)
    {
        printf("\t查无此人\n");
        exit(2);
    }
      printf("继续查询请按1，返回请按2\n");
	scanf("%d",&t);
	switch(t)
	{
	    case 1:find();
			   break;
	    case 2: system("cls");
			    break;
		default:break;
	    
	} 
}
/*********************************************************
Function:list
Description: 函数描述。在执行浏览功能时被主函数调用。函数功能。显示所用职工的记录。
Calls: gz.dat
*********************************************************/
void list()//浏览函数
{
	int n; 
    int m=read();
     printf("工号 姓名 岗位工资 薪级工资 职务津贴 绩效工资 应发工资 个人所得税 实发工资\n");
     for(n=0;n<m;n++)
     {
        printf("%s",zggz[n].ID);
		printf("  ");
		printf("%s",zggz[n].name);
	    printf("  ");
		printf("%5.2f",zggz[n].postWages);
		printf("  ");
		printf("%5.2f",zggz[n].paySalary);
		printf("  ");
		printf("%5.2f",zggz[n].jobAllowance);
		printf("  ");
		printf("%5.2f",zggz[n].performancePay);
		printf("  ");
		grads(n);              //计算输出应发工资，税率及实付工资
		printf("%5.2f",zggz[n].shouldPay);
		printf("  ");
		printf("%5.2f",zggz[n].tax);
		printf("  ");
		printf("%5.2f",zggz[n].realWages);
		printf("  ");
		printf("\n");
      }	
   printf("----------------------------------------------------------------------------------\n");
	printf("按任意键继续");
	getchar();
	getchar();
    system("cls");
}
/*********************************************************
Function:del
Description: 函数描述。在执行删除功能时被主函数调用.函数功能。删除指定工号职工的记录
Calls: gz.dat
*********************************************************/
void del()//删除函数
{
	
    int m=read(); 

    int i,j,n,t,button; 

    char gonghao[11]; 

    printf("\n 原来的职工信息:\n"); 

    list(); //显示删除前的员工信息 

    printf("\n"); 

    printf("请输入要删除的工号:\n"); 

    scanf("%s",gonghao); 

  for(button=1,i=0;button&&i<m;i++)//主函数中确定button==1时各函数才可以被调用 

  { 

   if(strcmp(zggz[i].ID,gonghao)==0)//按员工工号查找到某员工 并调出其资料 

   { 

        printf("\n此人原始记录为:\n");//显示选定员工的信息 
        printf("工号 姓名 岗位工资 薪级工资 职务津贴 绩效工资 应发工资 个人所得税 实发工资 \n"); 
        printf("%s",zggz[i].ID);
		printf("  ");	
		printf("%s",zggz[i].name);
		printf("  ");
		printf("%5.2f",zggz[i].postWages);
		printf("  ");
		printf("%5.2f",zggz[i].paySalary);
		printf("  ");
		printf("%5.2f",zggz[i].jobAllowance);
		printf("  ");
		printf("%5.2f",zggz[i].performancePay);
		printf("  ");
		grads(i);              //计算输出应发工资，税率及实付工资
		printf("%5.2f",zggz[i].shouldPay);
		printf("  ");
		printf("%5.2f",zggz[i].tax);
		printf("  ");
		printf("%5.2f",zggz[i].realWages);
		printf("  ");
		printf("\n");
        printf("\n确定删除 请按1,不删除请按0\n");   
        scanf("%d",&n); 
         if(n==1) /*如果删除，则其他的信息都往上移一行*/
    { 
      for(j=i;j<m;j++)//从第i项开始 将后一项的各成员的值赋给前一项各对应的成员 完成对第i项的删除 

      { 
       zggz[j]=zggz[j+1];
      } 
	}
      button=0; 
   } 
  } 
  if(!button)//button==0表明删除已完成 
  {
     m=m-1;//总员工数减少一人
	 printf("删除成功\n\n");
  }
  else 
  {
     printf("\n查无此人!\n"); 
  }
    printf("\n 删除后的所有职工信息:\n"); 
    write(m);     //调用保存函数 
    list();  //调用浏览函数   
    printf("\n继续删除请按1,不再删除请按0\n"); 
    scanf("%d",&t); 
  switch(t) 
  { 
     case 1:del();break; 
     case 0:break; 
     default :break; 
  } 
} 
/*********************************************************
Function:add
Description: 在执行添加功能时被主函数调用函数功能。添加工资记录到结构体数组zggz末尾
Calls: gZ.dat
*********************************************************/
void add()/*添加函数*/ 
{
      FILE *fp;
      int n=0,i,j=1;
      if((fp=fopen("gz.dat","ab+"))==NULL)
      {
          printf("不能打开gz文件\n");
           exit(0);
      }
       while(j){
		printf("职工号：");
		scanf("%s",&zggz[n].ID);
		printf("姓名：");
		scanf("%s",&zggz[n].name);
		printf("岗位工资：");
		scanf("%f",&zggz[n].postWages);
		printf("薪级工资：");
		scanf("%f",&zggz[n].paySalary);
		printf("职务津贴：");
		scanf("%f",&zggz[n].jobAllowance);
		printf("绩效工资：");
		scanf("%f",&zggz[n].performancePay);
        fwrite(&zggz[n],sizeof(struct gongzi),1,fp);   //将该职工记录写入文件
        printf("添加成功\n");
	    printf("继续请输入1退出请输入0\n");
	    scanf("%d",&j);
	if(j==0){break;};
	       };
	getchar();
	system("cls");
    fclose(fp);
}
/*********************************************************
Function:grads
Description: 函数描述。在计算个人所得税时被调用。函数功能。计算个人所得税，按照个人所得税税率表来计算，税率表如表4.1所示。
Calls: gz.dat
*********************************************************/
void grads(int i)
{
	zggz[i].shouldPay=zggz[i].postWages+zggz[i].paySalary+zggz[i].performancePay+zggz[i].jobAllowance;      //计算应付工资
	//printf("%g",zggz[i].shouldPay);
	float b,t;                   
	b=zggz[i].shouldPay;
	if(b>3500)
	{
		zggz[i].s1=b-3500;
		t=zggz[i].s1;
		if(t<500)
		{
			zggz[i].tax=t*(float)0.05;
		}
		if(t>500&&t<2000)
		{
			zggz[i].tax=t*(float)0.1;
		}
		if(t>2000&&t<5000)
		{
			zggz[i].tax=t*(float)0.15;
		}
		if(t>5000&&t<20000)
		{
			zggz[i].tax=t*(float)0.2;
		}
		if(t>20000&&t<40000)
		{
			zggz[i].tax=t*(float)0.25;
		}
		if(t>40000&&t<60000)
		{
			zggz[i].tax=t*(float)0.3;
		}
		if(t>60000&&t<80000){
			zggz[i].tax=t*(float)0.35;
		}
		if(t>80000&&t<100000)
		{
			zggz[i].tax=t*(float)0.4;
		}
		if(t>100000)
		{
			zggz[i].tax=t*(float)0.45;
		}
		
	}
	else{zggz[i].tax=0;}
	zggz[i].realWages=zggz[i].shouldPay-zggz[i].tax;   
}

/*********************************************************
Function:main
Description: 函数描述。主函数是程序执行的开始，在主函数中可调用其他函数来实现用户要求的功能。函数功能。主函数实现了系统的主界面，用户可在此界面输入查询、浏览、删除等命令。
Calls: gx.dat
*********************************************************/
void main()
{  
  
   int n,w1,y=1;
   FILE *fp;
	fp=fopen("gz.dat","a");
	if(fp==NULL){
	fp=fopen("gz.dat","a+");
	}
	else
	{
	while(y==1)
	{
       do
	   {
		   int m=read();
	       menu();
           printf("       您的选择是(1-7):[ ]\b\b");
           scanf("%d",&n);
           if(n<1||n>7)                                    //对选择的数字作判断
         {
            w1=1;
            printf("your choice is not between 1 and 7,Please input again:");

          }
         else    w1=0;
      } 
	while(w1==1);
    switch(n)
  { 
	case 1:find();    break;   
    case 2:modify();   break;  
    case 3:add();   break;    
    case 4:del();   break;    
    case 5:printf("文件保存成功");    break;    
    case 6:list();    break; 
    case 7:{
				system("cls");
				printf("*****谢谢使用*****");
				exit(0);
				y=0;
			}             //退出系统
	}
	}
	};
	
	system("pause");
}